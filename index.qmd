---
title: Effective parameter management with XParams
subtitle: PyData London 2023
# date: today
author: 
    - Paola Arce
    - Victor Díaz
format:
  revealjs:
    slide-number: true
    width: 1600
    height: 900
    header-logo: "img/PyData_logo.png"
    logo: "img/SDF__Symbol Logo_Blue_RGB.png"
    footer: "github.com/mapsa/pydatalondon2023-xparams"
    theme: [default, custom.scss]
    highlight-style: github
    # slide-number: c/t
    toc-depth: 1
    # transition: slide
    code-line-numbers: false
filters:
    - reveal-header
---

## {background-color="white" background-image="img/authors.jpg" background-size="1000px"}

## {auto-animate="true"}

:::: {style="text-align: center; margin-top: 200px; font-size: 2em"}
How to keep track of different configuration parameters?
::::

## {auto-animate="true"}

:::: {style="text-align: center; margin-top: 200px; font-size: 2em"}
How to keep track of different configuration parameters?

INI vs **TOML** vs YAML
::::

## A basic configuration file {auto-animate="true" style="margin-top: 50px" background-color="white"}

::: {layout-ncol=2}
```toml
title = "my title"

[section]
param1 = 2

[section.subsection1]
param1 = 500
param2 = true
param3 = "foo"
param4 =[1, 2, 3]
```
:::

## A basic configuration file {auto-animate="true" style="margin-top: 50px" background-color="white"}

::: {layout-ncol=2}
```toml
title = "my title"

[section]
param1 = 2

[section.subsection1]
param1 = 500
param2 = true
param3 = "foo"
param4 =[1, 2, 3]
```

 - configparser ❌
 - toml ✅ 
 - tomli ✅ 
 - tomlib ✅
 - XParams ✅
:::



## What if I want to validate data types? {auto-animate="true" style="margin-top: 50px" background-color="white"}

::: {layout-ncol=2}
```{.toml code-line-numbers="1"}
title = false

[section]
param1 = 2

[section.subsection1]
param1 = 500
param2 = true
param3 = "foo"
param4 =[1, 2, 3]
```
:::

## What if I want to validate data types? {auto-animate="true" style="margin-top: 50px" background-color="white"}

::: {layout-ncol=2}
```{.toml code-line-numbers="1"}
title = false

[section]
param1 = 2

[section.subsection1]
param1 = 500
param2 = true
param3 = "foo"
param4 =[1, 2, 3]
```

 - toml ❌
 - tomli ❌
 - rtoml ✅ 
 - pydantic ✅
 - XParams ✅
:::


## But only some parameters differ from the defaults ... {auto-animate="true" style="margin-top: 50px" background-color="white"}

::: {layout-ncol=2}

```{.toml code-line-numbers="1,4"}
title = "My new title"

[section.subsection1]
param2 = false
```

 - toml ❌
 - tomli ❌
 - rtoml ✅ 
 - pydantic ✅
 - XParams ✅
:::


## What if I want include a set of configuration files? {auto-animate="true" style="margin-top: 50px" background-color="white"}


::: {layout-ncol=2}

```{.toml code-line-numbers="1"}
include = "config-prod"
title = "My extended run"

[section.subsection1]
param5 = [1, 3, 5, 7, 9, 11]
```

 - toml ❌
 - tomli ❌
 - rtoml ❌
 - pydantic ❌
 - XParams ✅
:::

## What if I want to set a environment variable with the configuration file? {auto-animate="true" style="margin-top: 50px" background-color="white"}

::: {layout-ncol=2}

```bash
RUN=config-prod python myscript.py

RUN=config-prod make
```

 - toml ❌
 - tomli ❌
 - rtoml ❌
 - pydantic ❌
 - XParams ✅
:::


## What is XParams? {style="margin-top: 100px; font-size: 1.5em"}

XParams is a Python library to manage large and complex parameters. It was born while developing our agent-based model simulation of the economy called Aizle ( [https://aizle.ai](https://aizle.ai)).

## XParams {style="margin-top:50px; font-size: 1.5em"}

:::: {style="text-align: center; margin-top: 100px; font-size: .8em"}

|Supported features| check |
|-------|--------------------|
|use of `TOML` files| ✅ |
|inclusion of mutiple `TOML` files| ✅ |
|nested complex structure| ✅ |
|environment variable| ✅ |
|type checking at any level| ✅ |

::::

## XParams in action{auto-animate="true" style="margin-top: 50px" background-color="white"}

## XParams in action{auto-animate="true" style="margin-top: 50px" background-color="white"}

```python
defaults = {
    "param": "my_title",
    "section": {
        "subsection1": {
            "param1": 500,
        },
        "subsection2": {
            "param3": date(2023, 6, 3),
            "param5": {
                "var1": 1,
                "var2": "2",
            },
        },
    },
}
```

## XParams in action{auto-animate="true" style="margin-top: 50px" background-color="white"}

```python
from xparams import XParams

params = XParams(defaults, user_params_dir="config")
```


## XParams in action{auto-animate="true" style="margin-top: 50px" background-color="white"}

::: {layout-ncol=2}

```{.python code-line-numbers="5"}
defaults = {
    "param": "my_title",
    "section": {
        "subsection1": {
            "param1": 500,
        },
        "subsection2": {
            "param3": date(2023, 6, 3),
            "param5": {
                "var1": 1,
                "var2": "2",
            },
        },
    },
}
```
:::

## XParams in action{auto-animate="true" style="margin-top: 50px" background-color="white"}

::: {layout-ncol=2}

```{.python code-line-numbers="5"}
defaults = {
    "param": "my_title",
    "section": {
        "subsection1": {
            "param1": 500,
        },
        "subsection2": {
            "param3": date(2023, 6, 3),
            "param5": {
                "var1": 1,
                "var2": "2",
            },
        },
    },
}
```
:::

```python
>>> params.section.subsection1.param1
>>> 500
```
## XParams in action{auto-animate="true" style="margin-top: 50px" background-color="white"}

::: {layout-ncol=2}

```{.python code-line-numbers="9-12"}
defaults = {
    "param": "my_title",
    "section": {
        "subsection1": {
            "param1": 500,
        },
        "subsection2": {
            "param3": date(2023, 6, 3),
            "param5": {
                "var1": 1,
                "var2": "2",
            },
        },
    },
}
```
:::

## XParams in action{auto-animate="true" style="margin-top: 50px" background-color="white"}

::: {layout-ncol=2}

```{.python code-line-numbers="9-12"}
defaults = {
    "param": "my_title",
    "section": {
        "subsection1": {
            "param1": 500,
        },
        "subsection2": {
            "param3": date(2023, 6, 3),
            "param5": {
                "var1": 1,
                "var2": "2",
            },
        },
    },
}
```
:::

```python
>>> params.section.subsection2.param5.get_params()
>>> {'var1': 1, 'var2': '2'}
```

## XParams in action{auto-animate="true" style="margin-top: 50px" background-color="white"}

### Using `myrun.toml`:



## XParams in action{auto-animate="true" style="margin-top: 50px" background-color="white"}

### Using `myrun.toml`:

::: {layout-ncol=2}

```toml
[section.subsection1]
param1 = 1_900_000

[section.subsection2.param5]
var1 = 2
```
:::


## XParams in action{auto-animate="true" style="margin-top: 50px" background-color="white"}

### Using `myrun.toml`:

::: {layout-ncol=2}

```toml
[section.subsection1]
param1 = 1_900_000

[section.subsection2.param5]
var1 = 2
```

```python
params = XParams(
    defaults,
    name='myrun',
    user_params_dir="config"
)
```

:::



## XParams in action{auto-animate="true" style="margin-top: 50px" background-color="white"}

### Using `myrun.toml`:

::: {layout-ncol=2}

```toml
[section.subsection1]
param1 = 1_900_000

[section.subsection2.param5]
var1 = 2
```

```python
params = XParams(
    defaults,
    name='myrun',
    user_params_dir="config"
)
```
:::

```python
>>> params.section.subsection1.param1
>>> 1900000
```

```python
>>> params.section.subsection2.param5.get_params()
>>> {'var1': 2, 'var2': '2'}
```

## XParams in action{auto-animate="true" style="margin-top: 50px" background-color="white"}

### Using `iteration1.toml`:

::: {layout-ncol=2}

```toml
include = 'myrun'

[section.subsection2.param5]
var1 = 5
```
:::


## XParams in action{auto-animate="true" style="margin-top: 50px" background-color="white"}

### Using `iteration1.toml`:

::: {layout-ncol=2}

```toml
include = 'myrun'

[section.subsection2.param5]
var1 = 5
```


```python
params = XParams(
    defaults,
    name='iteration1',
    user_params_dir="config"
)
```
:::



## XParams in action{auto-animate="true" style="margin-top: 50px" background-color="white"}

### Using `iteration1.toml`:

::: {layout-ncol=2}

```toml
include = 'myrun'

[section.subsection2.param5]
var1 = 5
```


```python
params = XParams(
    defaults,
    name='iteration1',
    user_params_dir="config"
)
```
:::

```python
>>> params.section.subsection1.param1
>>> 1900000
```

```python
>>> params.section.subsection2.param5.get_params()
>>> {'var1': 5, 'var2': '2'}
```




## XParams in action{auto-animate="true" style="margin-top: 50px" background-color="white"}

### **I don't want to change my script everytime**

## XParams in action{auto-animate="true" style="margin-top: 50px" background-color="white"}

### **You don't need to!!!**


## XParams in action{auto-animate="true" style="margin-top: 50px" background-color="white"}

### **You don't need to!!!**
::: {layout-ncol=2}
```python
params = XParams(
    defaults,
    user_params_dir="config"
)
```
:::



## XParams in action{auto-animate="true" style="margin-top: 50px" background-color="white"}

### **You don't need to!!!**

::: {layout-ncol=2}
```python
params = XParams(
    defaults,
    user_params_dir="config"
)
```

```bash
XPARAMS=iteration1 python myscript.py
```
:::


## XParams in action{auto-animate="true" style="margin-top: 50px" background-color="white"}

### **You don't need to!!!**

::: {layout-ncol=2}
```python
params = XParams(
    defaults,
    user_params_dir="config"
)
```


```bash
XPARAMS=iteration1 python myscript.py
```
:::

```python
>>> params.section.subsection1.param1
>>> 1900000
```

```python
>>> params.section.subsection2.param5.get_params()
>>> {'var1': 5, 'var2': '2'}
```


## {background-color="lightyellow"}

::: {style="text-align: center; margin-top: 50px; font-size: 5em"}

Thank you 
:::

::: {style="text-align: center; margin-top: 30px; font-size: 1em"}
Do you want to know when this code is open source? Get in touch:

 [paola.arce@smartdatafoundry.com](paola.arce@smartdatafoundry.com)
 
 [victor.diaz@smartdatafoundry.com](victor.diaz@smartdatafoundry.com)

More info about Smart Data Foundry and the product we are developing here:

 [https://smartdatafoundry.com](https://smartdatafoundry.com)

 [https://aizle.ai](https://aizle.ai)
:::